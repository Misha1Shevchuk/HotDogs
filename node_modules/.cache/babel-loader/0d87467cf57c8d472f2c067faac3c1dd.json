{"ast":null,"code":"var _jsxFileName = \"/home/misha/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0438/Projects/HotDogs/client/src/components/HotDogsList/NewHotDogForm.jsx\";\nimport React from \"react\";\nimport axios from 'axios';\nexport default class NewHotDogForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeName = event => {\n      this.setState({\n        hotdog: event.target.value\n      });\n    };\n\n    this.handleChangeIngredients = event => {\n      this.setState({\n        ingredients: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n\n      if (this.state.hotdog !== \"\") {\n        console.warn('Add HotDog: ' + this.state.hotdog);\n        await axios.post(\"http://localhost:3001/newHotDog\", {\n          hotdog: this.state.hotdog,\n          ingredients: this.state.ingredients\n        }).then(() => {\n          this.clearForm();\n          this.props.getList();\n        });\n      } // додати перевірку\n\n    };\n\n    this.clearForm = () => {\n      this.setState({\n        hotdog: \"\"\n      });\n      this.setState({\n        ingredients: \"\"\n      });\n      this.props.toogleVisibilityForm();\n    };\n\n    this.render = () => {\n      return React.createElement(\"form\", {\n        className: \"new-hotdog-form\",\n        name: \"form-send-hotdog\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.hotdog,\n        autofocus: true,\n        onChange: this.handleChangeName,\n        className: \"new-hotdog-input\",\n        autoComplete: \"off\",\n        maxLength: \"90\",\n        placeholder: \"Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        className: \"new-hotdog-ingredients\",\n        value: this.state.ingredients,\n        onChange: this.handleChangeIngredients,\n        placeholder: \"ingredients\",\n        maxLength: \"255\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"button-accept\",\n        value: \"Add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"reset\",\n        onClick: this.clearForm,\n        className: \"button-cancel\",\n        value: \"Cancel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }));\n    };\n\n    this.state = {\n      hotdog: \"\",\n      ingredients: \"\"\n    };\n    this.handleChange = this.handleChangeIngredients.bind(this);\n    this.handleChange = this.handleChangeName.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n}","map":{"version":3,"sources":["/home/misha/Документи/Projects/HotDogs/client/src/components/HotDogsList/NewHotDogForm.jsx"],"names":["React","axios","NewHotDogForm","Component","constructor","props","handleChangeName","event","setState","hotdog","target","value","handleChangeIngredients","ingredients","handleSubmit","preventDefault","state","console","warn","post","then","clearForm","getList","toogleVisibilityForm","render","handleChange","bind"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from 'axios';\n\nexport default class NewHotDogForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            hotdog: \"\",\n            ingredients: \"\",\n        }\n        this.handleChange = this.handleChangeIngredients.bind(this);\n        this.handleChange = this.handleChangeName.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChangeName = event => {\n        this.setState({ hotdog: event.target.value });\n    }\n\n    handleChangeIngredients = event => {\n        this.setState({ ingredients: event.target.value });\n    }\n    \n    handleSubmit = async event => {\n        event.preventDefault();\n        if (this.state.hotdog !== \"\") {\n            console.warn('Add HotDog: ' + this.state.hotdog);\n            await axios.post(`http://localhost:3001/newHotDog`, {\n                hotdog: this.state.hotdog,\n                ingredients: this.state.ingredients\n            }).then(() => {\n                this.clearForm();\n                this.props.getList();\n            })\n        }\n        // додати перевірку\n    }\n\n    clearForm = () => {\n        this.setState({ hotdog: \"\" });\n        this.setState({ingredients: \"\"});\n        this.props.toogleVisibilityForm();\n    }\n\n    render = () => {\n        return (\n            <form className=\"new-hotdog-form\" name=\"form-send-hotdog\" onSubmit={this.handleSubmit}>\n                <input type=\"text\" value={this.state.hotdog} autofocus onChange={this.handleChangeName} className=\"new-hotdog-input\" autoComplete=\"off\" maxLength=\"90\" placeholder=\"Name\" /><br />\n                <textarea className=\"new-hotdog-ingredients\" value={this.state.ingredients} onChange={this.handleChangeIngredients} placeholder=\"ingredients\" maxLength=\"255\"></textarea><br/>\n                <input type=\"submit\" className=\"button-accept\" value=\"Add\" />\n                <input type=\"reset\" onClick={this.clearForm} className=\"button-cancel\" value=\"Cancel\" />\n            </form>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}